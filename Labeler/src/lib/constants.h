/*
 * constants.h
 *
 * Created: 18.05.2022 12:40:35
 *  Author: ruwen
 */ 


// constants.h enthält alle wichtigen Deklarationen, Aliase und Konfigurationen
// in einer Datei. Somit ist es spielend einfach Parameter global zu ändern.

#ifndef CONSTANTS_H_
#define CONSTANTS_H_

// ***********************************************************************************************************************
// QUALITY OF LIFE MACROS BEGIN
// ***********************************************************************************************************************
#define BitSet(Port,Bit) (Port|=(1<<Bit))
#define BitClear(Port,Bit) (Port&=~(1<<Bit))
#define BitToggle(Port,Bit) (Port^=(1<<Bit))
#define SetBits(Port,BitMask) (Port|=BitMask)
#define ClearBits(Port,BitMask) (Port&=~BitMask)
#define ToggleBits(Port,BitMask) (Port^=BitMask)

#define IsBitSet(Port, Bit) (Port & (1 << Bit))

#define PI_SCALED 314
#define TWO_PI_SCALED 628
#define THREE_SIXTY_DIV_TWO_PI 57 // 360 / (2*pi)

// ***********************************************************************************************************************
// QUALITY OF LIFE MACROS END
// ***********************************************************************************************************************

// -----------------------------------------------------------------------------------------------------------------------

#include <avr/io.h>

// ***********************************************************************************************************************
// Z-Schrittmotor BEGIN
// ***********************************************************************************************************************
// Aliase für PINS
#define Z_TAKT PH4
#define Z_DIR PL2
#define Z_ACTIVE PL3

// Berechnet für Aufsteckzylinder (radius=5.5cm) -> Genauer Wert 9.26
#define STEPS_PER_MM_Z 9
#define STEPS_PER_DEGREE_Z 9 // 1 / (1.8°/16)
#define Z_STEPS_PER_MM_PRESCALER 509 //  1 / (((1.8°)/16) / 360 * 2 * pi)
#define PIXEL_CALC_PRESC_UPSCALED_1000 77 // (2 * pi / (16x4px + 15x1px + 1x2px)) * 1000



// ***********************************************************************************************************************
// Z-Schrittmotor END
// ***********************************************************************************************************************


// -----------------------------------------------------------------------------------------------------------------------


// ***********************************************************************************************************************
// X-Schrittmotor BEGIN
// ***********************************************************************************************************************
// Aliase für PINS
#define X_TAKT PE4
#define X_DIR PA4
#define X_ACTIVE PA3

// Kalibriert manuell
#define STEPS_PER_MM_X 23
#define FREQ_STEPPER_X 249

// ***********************************************************************************************************************
// X-Schrittmotor END
// ***********************************************************************************************************************


// -----------------------------------------------------------------------------------------------------------------------


// ***********************************************************************************************************************
// Y-Schrittmotor BEGIN
// ***********************************************************************************************************************
// Aliase für PINS
#define Y_TAKT PB6
#define Y_DIR PA1
#define Y_ACTIVE PA0

// Kalibriert manuell
#define STEPS_PER_MM_Y 23
// ***********************************************************************************************************************
// Y-Schrittmotor END
// ***********************************************************************************************************************


// -----------------------------------------------------------------------------------------------------------------------


// ***********************************************************************************************************************
// ENDLAGENSCHALTER (E1, E2, E3, E4) BEGIN
// ***********************************************************************************************************************
// Aliase für PINS der Schalter
#define X_LEFT_LIM_PIN PD2 // INT2
#define Y_BOTTOM_LIM_PIN PD3 // INT3
#define Y_TOP_LIM_PIN PD1 // INT1
#define X_RIGHT_LIM_PIN PD0 // INT0

// ***********************************************************************************************************************
// ENDLAGENSCHALTER (E1, E2, E3, E4) END
// ***********************************************************************************************************************


// -----------------------------------------------------------------------------------------------------------------------


// ***********************************************************************************************************************
// CLOCK AND SYNCHRONISATION BEGIN
// ***********************************************************************************************************************
#ifndef F_CPU
#define F_CPU 16000000UL
#endif


// #define BAUD_RATE 115200UL
#define BAUD_RATE 9600UL // Nutzen eine niedrigere Baudrate, damit das Programm ausreichend Zeit hat HTerm-Strings zu lesen.

#define BAUD_UBRR ((F_CPU+BAUD_RATE*8UL)/(16UL*BAUD_RATE)-1)

#define DISABLE_UART_ISR TIMSK0 &= ~(1 << OCIE0A)
#define ENABLE_UART_ISR TIMSK0 |= (1<<OCIE0A)


// ***********************************************************************************************************************
// CLOCK AND SYNCHRONISATION END
// ***********************************************************************************************************************


// -----------------------------------------------------------------------------------------------------------------------


// ***********************************************************************************************************************
// LCD-Display BEGIN
// ***********************************************************************************************************************
// Aliase für PINS
#define	RS				0b00000100
#define	ENABLE			0b00001000
#define OHB				0b11110000
#define RS232BITS		0b00000011
#define LCD_RESET		0b00110000
#define LCD_INTERFACE	0b00100000

// ***********************************************************************************************************************
// CD-Display END
// ***********************************************************************************************************************


// -----------------------------------------------------------------------------------------------------------------------


// ***********************************************************************************************************************
// Laser-Distance-Sensor BEGIN
// ***********************************************************************************************************************
// Mean-Average 10 Bit-Werte wenn Laser in seinen Messschranken ankommt.
#define LASER_DIGITAL_LOW 5
#define LASER_DIGITAL_HIGH 1014

#define LASER_MEAS_RANGE_LOW 0
#define LASER_MEAS_RANGE_HIGH 800

// Stepper muss in diesen Bereich Fahren, bevor er den Messungen des Lasers vertrauen kann
// Derzeit 12.5% des Maximums
#define STEPPER_INSIDE_MEAS_RANGE (LASER_MEAS_RANGE_HIGH - (LASER_MEAS_RANGE_HIGH >> 3))

#define REFERENCE_DIST 600
#define REFERENCE_RAD 550


#define OFFSET_PEN_LASER 46

#define BALLOON_SHELL_CENTER_FIND_STEPS 150




#define NON_OBJECT_ERROR_DISTANCE 0
#define WRONG_OBJECT_BALLLOON_DIST 123
#define WRONG_OBJECT_CYLINDER_DIST 123




#define BALLOON_OBJECT_CHECK_INDEX_LOWER 10
#define BALLOON_OBJECT_CHECK_INDEX_UPPER 50
#define BALLOON_OBJECT_CHECK_DELTA 30
#define CYLINDER_OBJECT_CHECK_DELTA  30




// ***********************************************************************************************************************
// Laser-Distance-Sensor END
// ***********************************************************************************************************************


// -----------------------------------------------------------------------------------------------------------------------


// ***********************************************************************************************************************
// Controll-Buttons BEGIN
// ***********************************************************************************************************************

#define VERIFY_BUTTON_PIN PG1 // Grüner Knopf 
#define CANCEL_BUTTON_PIN PL7 // Roter Knopf



// ***********************************************************************************************************************
// Controll-Buttons END
// ***********************************************************************************************************************
#define _SR_SETUP controller.pixel_unit_mm = 3;
#define _DR_SETUP controller.pixel_unit_mm = 2;


#endif /* CONSTANTS_H_ */